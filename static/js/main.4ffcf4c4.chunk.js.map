{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","newFilm","titleError","imgUrlError","imdbUrlError","imdbIdError","handleChange","event","target","name","value","setState","titleInputCheck","trim","length","titleInputFocus","validateUrl","url","test","imgUrlInputCheck","imgUrlInputFocus","imdbUrlInputCheck","imdbUrlInputFocus","imdbIdInputCheck","imdbIdInputFocus","formAddNewFilm","props","addMovie","formClear","submitFormButtonControl","handleSubmit","preventDefault","this","onSubmit","htmlFor","type","id","placeholder","classNames","error__border","onChange","onFocus","onBlur","error__show","disabled","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ffcf4c4.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (newFilm: Movie) => void;\n};\ntype State = {\n  newFilm: Movie,\n  titleError: boolean,\n  imgUrlError: boolean,\n  imdbUrlError: boolean,\n  imdbIdError: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    newFilm: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    titleError: false,\n    imgUrlError: false,\n    imdbUrlError: false,\n    imdbIdError: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>\n  | React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      newFilm: {\n        ...state.newFilm,\n        [name]: value,\n      },\n    }));\n  };\n\n  titleInputCheck = () => {\n    if (!this.state.newFilm.title.trim().length) {\n      this.setState(state => ({\n        titleError: !state.titleError,\n      }));\n    }\n  };\n\n  titleInputFocus = () => {\n    if (this.state.titleError) {\n      this.setState(state => ({\n        titleError: !state.titleError,\n      }));\n    }\n  };\n\n  validateUrl = (url: string): boolean => {\n    // eslint-disable-next-line\n    const reg = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return reg.test(url);\n  };\n\n  imgUrlInputCheck = () => {\n    const checkImgUrl = this.validateUrl(this.state.newFilm.imgUrl);\n\n    if (!checkImgUrl) {\n      this.setState(state => ({\n        imgUrlError: !state.imgUrlError,\n      }));\n    }\n  };\n\n  imgUrlInputFocus = () => {\n    if (this.state.imgUrlError) {\n      this.setState(state => ({\n        imgUrlError: !state.imgUrlError,\n      }));\n    }\n  };\n\n  imdbUrlInputCheck = () => {\n    const checkImdbUrl = this.validateUrl(this.state.newFilm.imdbUrl);\n\n    if (!checkImdbUrl) {\n      this.setState(state => ({\n        imdbUrlError: !state.imdbUrlError,\n      }));\n    }\n  };\n\n  imdbUrlInputFocus = () => {\n    if (this.state.imdbUrlError) {\n      this.setState(state => ({\n        imdbUrlError: !state.imdbUrlError,\n      }));\n    }\n  };\n\n  imdbIdInputCheck = () => {\n    if (!this.state.newFilm.imdbId.trim()) {\n      this.setState(state => ({\n        imdbIdError: !state.imdbIdError,\n      }));\n    }\n  };\n\n  imdbIdInputFocus = () => {\n    if (this.state.imdbIdError) {\n      this.setState(state => ({\n        imdbIdError: !state.imdbIdError,\n      }));\n    }\n  };\n\n  formAddNewFilm = () => {\n    this.setState(state => ({\n      newFilm: {\n        title: state.newFilm.title,\n        description: state.newFilm.description,\n        imgUrl: state.newFilm.imgUrl,\n        imdbUrl: state.newFilm.imdbUrl,\n        imdbId: state.newFilm.imdbId,\n      },\n    }));\n\n    this.props.addMovie(this.state.newFilm);\n  };\n\n  formClear = () => {\n    this.setState({\n      newFilm: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  };\n\n  submitFormButtonControl = () => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.newFilm;\n\n    const {\n      imgUrlError,\n      imdbUrlError,\n    } = this.state;\n\n    if (title.length < 1 || imgUrl.length < 1 || imdbUrl.length < 1 || imdbId.length < 1) {\n      return true;\n    }\n\n    if (imdbUrlError === true || imgUrlError === true) {\n      return true;\n    }\n\n    return false;\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.formAddNewFilm();\n    this.formClear();\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.newFilm;\n\n    const {\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className=\"new-movie-form\"\n      >\n        <h2 className=\"new-movie-form__title\">Add a new film</h2>\n        <label htmlFor=\"title\">\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Add title\"\n            className={classNames({ error__border: titleError })}\n            value={title}\n            onChange={this.handleChange}\n            onFocus={this.titleInputFocus}\n            onBlur={this.titleInputCheck}\n          />\n          <span\n            className={classNames('error', { error__show: titleError })}\n          >\n            Please, add film title - required field\n          </span>\n        </label>\n\n        <label htmlFor=\"description\">\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Add description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"imgUrl\">\n          <input\n            type=\"text\"\n            id=\"imgUrl\"\n            name=\"imgUrl\"\n            placeholder=\"Add imgUrl\"\n            className={classNames({ error__border: imgUrlError })}\n            value={imgUrl}\n            onChange={this.handleChange}\n            onFocus={this.imgUrlInputFocus}\n            onBlur={this.imgUrlInputCheck}\n          />\n          <span\n            className={classNames('error', { error__show: imgUrlError })}\n          >\n            Please, add a link (http://tra.la/la) - required field\n          </span>\n        </label>\n\n        <label htmlFor=\"imdbUrl\">\n          <input\n            type=\"text\"\n            id=\"imdbUrl\"\n            name=\"imdbUrl\"\n            placeholder=\"Add imdbUrl\"\n            className={classNames({ error__border: imdbUrlError })}\n            value={imdbUrl}\n            onChange={this.handleChange}\n            onFocus={this.imdbUrlInputFocus}\n            onBlur={this.imdbUrlInputCheck}\n          />\n          <span\n            className={classNames('error', { error__show: imdbUrlError })}\n          >\n            Please, add a link (http://tra.la/la) - required field\n          </span>\n        </label>\n\n        <label htmlFor=\"imdbId\">\n          <input\n            type=\"text\"\n            id=\"imdbId\"\n            name=\"imdbId\"\n            placeholder=\"Add imdbId\"\n            className={classNames({ error__border: imdbIdError })}\n            value={imdbId}\n            onChange={this.handleChange}\n            onFocus={this.imdbIdInputFocus}\n            onBlur={this.imdbIdInputCheck}\n          />\n          <span\n            className={classNames('error', { error__show: imdbIdError })}\n          >\n            Please, add film id - required field\n          </span>\n        </label>\n        <button\n          type=\"submit\"\n          disabled={this.submitFormButtonControl()}\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newFilm: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, newFilm],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}